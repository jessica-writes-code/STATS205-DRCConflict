install.packages(npsm)
install.packages('npsm')
data(simon)
library(npsm)
data(simon)
data(simon)
head(simon)
plot(simon$game1, simon$game2)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
rfit(game2 ~ game1, data=simon)
plot(simon.rfit)
simon.rfit <- rfit(game2 ~ game1, data=simon)
plot(simon.rfit)
?line
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
line(c(0,1), c(0,1))
lines(c(0,1), c(0,1), add=TRUE)
?lines
?abline
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
abline(a = 0, b = 1)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
abline(a = 0, b = 1)
simon.rfit
data(simon)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
simon.rfit <- rfit(game2 ~ game1, data=simon)
absline(simon.rfit)
abline(simon.rfit)
abline(a = 0, b = 1)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
simon.rfit <- rfit(game2 ~ game1, data=simon)
abline(simon.rfit)
abline(a = 0, b = 1, lty=2)
summary(rfit)
summary(simon.rfit)
se <- simon.rfit[2,2]
se <- summary(simon.rfit)[2,2]
se <- simon.rfit$coefficients[2,2]
coefficients(simon.rfit)[2,2]
coefficients(simon.rfit)
summary(fit)$sigma
summary(simon.rfit)$sigma
m <- summary(simon.rfit)
m$sigma
m$dropstat
m$coefficients
m$coefficients[2,2]
se <- summary(simon.rfit)$coefficients[2,2]
game1.coef <- summary(simon.rfit)$coefficients[2,1]
game1.se <- summary(simon.rfit)$coefficients[2,2]
lb <- game1.coef - 1.97*se
ub <- game1.coef + 1.97*se
# C) Obtain an R estimate of the slope of the regression line as well as an associated confidence interval.
summary(simon.rfit)
game1.coef <- summary(simon.rfit)$coefficients[2,1]
game1.se <- summary(simon.rfit)$coefficients[2,2]
lb <- game1.coef - 1.97*se
ub <- game1.coef + 1.97*se
c(lb,ub)
X <- rlaplace(30)
errors <- rnorm(30)
install.packages('VGAM')
library(VGAM)
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
plot(X, Y)
df <- cbind(X, Y)
View(df)
# Import libraries
library(npsm)
library(VGAM)
set.seed(205)
# Generate data
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
# Scatterplot
plot(X, Y)
# Association analyses
df <- cbind(X, Y)
with(df, cor.test(X,Y))
with(df, cor.test(X,Y, method='spearman'))
?cor.test
cor.test(X,Y)
rm(list=ls())
# Import libraries
library(npsm)
library(VGAM)
# Set Seed
set.seed(205)
# Generate data
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
plot(X, Y)
cor.test(X,Y)
cor.test(X,Y, method='spearman')
cor.test(X,Y, method='kendall')
cor.test(X,Y, method='pearson')
?cor.boot.ci
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
cor.test(X,Y, method='pearson')
m <- cor.test(X,Y, method='pearson')
m$p.value
m$statistic
m$estimate
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xseq<-seq(-4,4,.01)
cumulative<-pnorm(xseq, 0, 1)
plot(xseq, cumulative)
line(xseq, cumulative, lwd=1, col="red")
lines(xseq, cumulative, lwd=1, col="red")
xseq<-seq(-4,4,.01)
cumulative<-pnorm(xseq, 0, 1)
lines(xseq, cumulative, lwd=1, col="red")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE)
input <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS205/Assignment 5/Input"
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE)
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, sep=",")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="", fileEncoding="UCS-2LE")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="")
library(xlsx)
?read.xlsx
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"))
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
install.packages('openxlsx')
library(openxlsx)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
View(oes)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$state, oes.red$occ_title, oes.red$h_median)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$state, oes.red$occ_title, oes.red$h_median)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN)
oes.table <- table(oes$state, oes$job_title)
data(hodgkins)
library(npsm)
data(hodgkins)
head(hodgkins)
table(hodgkins$trt)
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
install.packages('survival')
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
library(survival)
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
plot(fit, lty=1:2, ylab="", xlab="Time")
legend('bottomleft', c("Affected Node", "Total Node"), lty=1:2, bty='n')
plot(fit, lty=1:2, main="Hodgkins Treatment Survival", ylab="Probability of Relapse-Free Survival", xlab="Time")
legend('bottomleft', c("Affected Node", "Total Node"), lty=1:2, bty='n')
?Exponential
with(hodgkins, Surv(time, recur))
with(hodgkins, Surv(time, relapse))
df2 <- as.data.frame(cbind(event.times, study.times))
df2$time <- min(event.times, study.times)
event.mean <- 5
event.times <- rexp(100, rate = 1/event.mean)
## Study
study.mean <- 1.8
study.times <- rexp(100, rate = 1/study.mean)
# Create DF
df2 <- as.data.frame(cbind(event.times, study.times))
df2$time <- min(event.times, study.times)
View(df2)
df2$time <- apply(df[,1:2],1,min)
df2$time <- apply(df2[,1:2],1,min)
View(df2)
df2$censor <- df$study.times < df$event.times
df2$censor <- df2$study.times < df2$event.times
View(df2)
?ifelse
df2$censor <- ifelse(df2$study.times < df2$event.times, 1, 0)
View(df2)
fit <- with(df2, survfit(Surv(time,censor)))
fit <- with(df2, survfit(Surv(time,censor)~1))
plot(df2.fit)
df2.fit <- with(df2, survfit(Surv(time,censor)~1))
plot(df2.fit)
?survfit
plot(df2.fit, conf.int=FALSE)
plot(df2.fit, conf.int=FALSE, xlab="Time", ylab="Probability of Event-Free Survival")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
View(oes)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN), stringsAsFactors = FALSE)
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN_NUM <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN <- as.charcter(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
unique(oes.red$OCC_TITLE,oes.red$STATE)
length(unique(oes.red$OCC_TITLE,oes.red$STATE))
unique(oes.red[,c('OCC_TITLE','STATE')])
length(unique(oes.red[,c('OCC_TITLE','STATE')]))
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
oes.red$STATE <- as.factor(oes.red$STATE)
oes.red$OCC_TITLE <- as.factor(oes.red$OCC_TITLE)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
rm(list=ls())
# Set input path
input <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS205/Assignment 5/Input"
# Import libraries
library(npsm)
library(xlsx)
library(openxlsx)
library(survival)
# Set Seed
set.seed(205)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
summary(oes.red$H_MEDIAN)
sum(oes.red$H_MEDIAN == "*")
sum(oes.red$H_MEDIAN == "#")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
## Replace "#"
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
source('~/.active-rstudio-document', echo=TRUE)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
## Replace "#"
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create Tabl
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red.f)
oes.med <- medpolish(oes.red, maxiter=3)
oes.med$row
oes.med$col
oes.med
plot(oes.med)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
View(oes.red)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
View(oes.red)
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
View(oes.red)
# Create Table
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- t(oes.red)
oes.red[,1:2]
View(oes.red)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
View(oes.red)
oes.red <- oes.red[,-4]
View(oes.red)
data(hodgkins)
head(hodgkins)
mean(hodgkins$time[hodgkins$trt=="AN"])
mean(hodgkins$time[hodgkins$trt=="TN"])
table(hodgkins$trt)
event.mean <- 5
event.times <- rexp(100, rate = 1/event.mean)
## Study
study.mean <- 1.8
study.times <- rexp(100, rate = 1/study.mean)
# Create DF
df2 <- as.data.frame(cbind(event.times, study.times))
View(df2)
df2$time <- apply(df2[,1:2],1,min)
df2$censor <- ifelse(df2$study.times < df2$event.times, 1, 0)
mean(df2$censor)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
