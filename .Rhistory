oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
View(oes)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN), stringsAsFactors = FALSE)
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN_NUM <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN <- as.charcter(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
unique(oes.red$OCC_TITLE,oes.red$STATE)
length(unique(oes.red$OCC_TITLE,oes.red$STATE))
unique(oes.red[,c('OCC_TITLE','STATE')])
length(unique(oes.red[,c('OCC_TITLE','STATE')]))
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
oes.red$STATE <- as.factor(oes.red$STATE)
oes.red$OCC_TITLE <- as.factor(oes.red$OCC_TITLE)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
rm(list=ls())
# Set input path
input <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS205/Assignment 5/Input"
# Import libraries
library(npsm)
library(xlsx)
library(openxlsx)
library(survival)
# Set Seed
set.seed(205)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
summary(oes.red$H_MEDIAN)
sum(oes.red$H_MEDIAN == "*")
sum(oes.red$H_MEDIAN == "#")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
## Replace "#"
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
source('~/.active-rstudio-document', echo=TRUE)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
## Initial subsetting
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
## Replace "#"
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Subset to occupations in all states
### Count states where occupations exist
COUNT <- rep(1,nrow(oes.red))
count.occs <- aggregate(COUNT, by=list(oes.red$OCC_TITLE), sum)
names(count.occs) <- c("OCC_TITLE", "NUM_STATES")
### Merge counts
oes.red <- merge(oes.red, count.occs)
oes.red <- subset(oes.red, NUM_STATES==50)
## Re-factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create dataframe
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
# Reshape Data Frame
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
oes.red[,1:2]
# Create Tabl
oes.red <- subset(oes, OCC_GROUP == "major" & !(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- oes.red[,order(names(oes.red))]
oes.red <- t(oes.red)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red.f)
oes.med <- medpolish(oes.red, maxiter=3)
oes.med$row
oes.med$col
oes.med
plot(oes.med)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
View(oes.red)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
View(oes.red)
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
View(oes.red)
# Create Table
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
oes.red <- oes.red[,-4]
## Reshape
oes.red.f <- oes.red
oes.red <- reshape(oes.red, timevar = "STATE", idvar=c("OCC_TITLE"), direction = "wide")
rownames(oes.red) <- oes.red$OCC_TITLE
oes.red <- oes.red[,-1]
oes.red <- t(oes.red)
oes.red[,1:2]
View(oes.red)
oes.red <- subset(oes, OCC_GROUP == "major" &
!(STATE %in% c("Guam","Puerto Rico","Virgin Islands","District of Columbia")))
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
## Factor Data
oes.red$STATE <- factor(oes.red$STATE)
oes.red$OCC_TITLE <- factor(oes.red$OCC_TITLE)
View(oes.red)
oes.red <- oes.red[,-4]
View(oes.red)
data(hodgkins)
head(hodgkins)
mean(hodgkins$time[hodgkins$trt=="AN"])
mean(hodgkins$time[hodgkins$trt=="TN"])
table(hodgkins$trt)
event.mean <- 5
event.times <- rexp(100, rate = 1/event.mean)
## Study
study.mean <- 1.8
study.times <- rexp(100, rate = 1/study.mean)
# Create DF
df2 <- as.data.frame(cbind(event.times, study.times))
View(df2)
df2$time <- apply(df2[,1:2],1,min)
df2$censor <- ifelse(df2$study.times < df2$event.times, 1, 0)
mean(df2$censor)
source('~/.active-rstudio-document', echo=TRUE)
plot(ecdf(bs.all$auc.pi), xlim=c(), ylim=c(), yaxt='n')
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n')
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n', type='l')
?plot
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n')
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n', lwd=3)
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n', lwd=1)
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n', pch=20)
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE)
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, type='l')
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n', lwd=1)
plot(ecdf(bs.all$auc.pi), xlim=c(.4,1), ylim=c(0,1), yaxt='n')
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE)
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), ylim=c(0,1), yaxt='n', pch=20, cex=.2)
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), ylim=c(0,1), yaxt='n', pch=20, cex=.25)
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), ylim=c(0,1), yaxt='n', pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
par(mar=c(4,4,2,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), ylim=c(0,1), yaxt='n', pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(0,.2,.4,.6,.8,1), labels=c("0.0","0.2","0.4","0.6","0.8","1.0"), cex.axis=1.10)
par(mar=c(4,4,2,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', ylim=c(0,1), yaxt='n', pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
par(mar=c(4,4,2,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(0,.2,.4,.6,.8,1), labels=c("0.0","0.2","0.4","0.6","0.8","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
par(mar=c(4,4,2,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.5), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
legend(.55, .2, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
legend(.55, 1.2, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
png(paste0(output,'/','All Conflicts-ECDF','.png'))
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
par(xpd=TRUE)
legend(.55, 1.2, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(xpd=FALSE)
dev.off()
png(paste0(output,'/','All Conflicts-ECDF','.png'))
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
par(xpd=TRUE)
legend(.65, 1.5, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(xpd=FALSE)
dev.off()
# Combine AUC Calculations & Save
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
par(xpd=TRUE)
legend(.65, 1.3, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(xpd=FALSE)
png(paste0(output,'/','All Conflicts-ECDF','.png'))
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(bs.all$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(bs.all$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(bs.all$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
par(xpd=TRUE)
legend(.65, 1.3, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(xpd=FALSE)
dev.off()
ecdf.auc <- function(df,name) {
png(paste0(output,'/',name,'.png'))
par(mar=c(4,4,5,2))
## - Plot all lines
plot(ecdf(df$auc.pi), xlim=c(.5,1), xaxt='n', xlab="", ylim=c(0,1.05), yaxt='n', ylab="", pch=20, cex=.25, main="")
plot(ecdf(df$auc.lscv), col="blue", add=TRUE, pch=20, cex=.25)
plot(ecdf(df$auc.lscv.RN), col="red", add=TRUE, pch=20, cex=.25)
plot(ecdf(df$auc.bcv), col="green", add=TRUE, pch=20, cex=.25)
plot(ecdf(df$auc.ns), col="orange", add=TRUE, pch=20, cex=.25)
## - Add Axis Labels
title(xlab = "AUC", line = 2.0, cex.lab=1.20)
axis(1, at=c(.5,.6,.7,.8,.9,1), labels=c("0.5","0.6","0.7","0.8","0.9","1.0"), cex.axis=1.10)
title(ylab = "Cumulative Probability", line = 2.0, cex.lab=1.20)
axis(2, at=c(0,.2,.4,.6,.8,1), labels=c("0%","20%","40%","60%","80%","100%"), cex.axis=1.10)
## - Add Legend
par(xpd=TRUE)
legend(.65, 1.3, c("Plug-In","LSCV","LSCV w/ Random Noise","BCV","NS"), lwd=c(2,2,2,2), col=c("black","blue","red","green","orange"))
par(xpd=FALSE)
dev.off()
}
auc.ecdf(bs.all,"All Conflicts-ECDF")
ecdf.auc(bs.all,"All Conflicts-ECDF")
source('~/.active-rstudio-document', echo=TRUE)
conflevel <- 0.95
tests <- 10
lb.conf <- (1-conflevel)/(2*tests)
ub.conf <- 1-lb.conf
source('~/.active-rstudio-document', echo=TRUE)
