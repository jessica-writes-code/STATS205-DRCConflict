head(malecoef)
malecoef[,1]
malecoef[1]
male.int <- coef(abortion.malelmList)[,1]
abortion.malelmList <- lmer(NumPos ~ Year + (Year | Respondent), subset = GenderM == 1, data=abortion)
abortion.malelmList
abortion.malelmList <- lmList(NumPos ~ Year + (Year | Respondent), subset = GenderM == 1, data=abortion)
abortion.femalelmList <- lmList(NumPos ~ Year + (Year | Respondent), subset = GenderM == 0, data=abortion)
# Obtain Coefficients
abortion.malelmList <- lmList(NumPos ~ Year | Respondent, subset = GenderM == 1, data=abortion)
abortion.femalelmList <- lmList(NumPos ~ Year | Respondent, subset = GenderM == 0, data=abortion)
male.int <- coef(abortion.malelmList)
femalecoef <- coef(abortion.femalelmList)
boxplot(malecoef[,1], femalecoef[,1], main = 'Intercepts', names = c('Male', 'Female'))
malecoef <- coef(abortion.malelmList)
femalecoef <- coef(abortion.femalelmList)
boxplot(malecoef[,1], femalecoef[,1], main = 'Intercepts', names = c('Male', 'Female'))
boxplot(malecoef[,2], femalecoef[,2], main = 'Coefficients', names = c('Male', 'Female'))
table(abortion$SocialClass)
class(abortion$SocialClass)
abortion$SocialClass <- as.factor(abortion$SocialClass)
melm3 <- lmer(NumPos ~ Year*SocialClass + Age + (Year | Respondent), data=abortion)
summary(melm3)
abortion$Religion <- as.factor(abortion$Religion)
melm3 <- lmer(NumPos ~ Year*Religion + Age + (Year | Respondent), data=abortion)
summary(melm3)
# Load data
abortion <- read.table(file=paste0(input,"/socatt.DAT"), header=FALSE)
head(abortion)
# Process data
names(abortion) <- c("District","Respondent","Year","NumPos","Party","SocialClass","Gender","Age","Religion")
## Religion
abortion$Religion.Labels[abortion$Religion == 1] <- "Roman Catholic"
abortion$Religion.Labels[abortion$Religion == 2] <- "Protestant/Anglican"
abortion$Religion.Labels[abortion$Religion == 3] <- "Other"
abortion$Religion.Labels[abortion$Religion == 4] <- "None"
abortion$Religion.Labels <- factor(abortion$Religion.Labels)
table(abortion$Religion.Labels, useNA = c("always"))
## Gender
abortion$GenderM <- 0
abortion$GenderM[abortion$Gender == 1] <- 1
table(abortion$GenderM, useNA = c("always"))
## Age
hist(abortion$Age, main="", xlab="Age")
melm3 <- lmer(NumPos ~ Year*Religion + Age + (Year | Respondent), data=abortion)
summary(melm3)
melm3 <- lmer(NumPos ~ Year*Religion.Labels + Age + (Year | Respondent), data=abortion)
summary(melm3)
abortion.ClmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Roman Catholic", data=abortion)
abortion.PlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Protestant/Anglican", data=abortion)
abortion.OlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Other", data=abortion)
abortion.PlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "None", data=abortion)
abortion.NlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "None", data=abortion)
abortion.ClmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Roman Catholic", data=abortion)
abortion.PlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Protestant/Anglican", data=abortion)
abortion.OlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Other", data=abortion)
abortion.NlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "None", data=abortion)
abortion.ClmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Roman Catholic", data=abortion)
abortion.PlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Protestant/Anglican", data=abortion)
abortion.OlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "Other", data=abortion)
abortion.NlmList <- lmList(NumPos ~ Year | Respondent, subset = Religion.Labels == "None", data=abortion)
# Obtain Coefficients
Ccoef <- coef(abortion.ClmList)
Pcoef <- coef(abortion.PlmList)
Ocoef <- coef(abortion.OlmList)
Ncoef <- coef(abortion.NlmList)
boxplot(Ccoef[,1], Pcoef[,1], Ocoef[,1], Ncoef[,1], main = 'Intercepts', names = c('Catholic', 'Protestant', 'Other', 'None'))
boxplot(Ccoef[,2], Pcoef[,2], Ocoef[,2], Ncoef[,2], main = 'Intercepts', names = c('Catholic', 'Protestant', 'Other', 'None'))
melm2 <- lmer(NumPos ~ Year + Age + (Year | Respondent), data=abortion)
summary(melm2)
source('~/.active-rstudio-document', echo=TRUE)
input <- file.path("/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS196A/Project/Input")
abortion <- read.table(file=paste0(input,"/socatt.DAT"), header=FALSE)
# Set-up coding environment
## Clear global environment
rm(list=ls())
## Import libraries
library(lattice)
library(lme4)
## Set input path
input <- file.path("/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS196A/Project/Input")
# Load data
abortion <- read.table(file=paste0(input,"/socatt.DAT"), header=FALSE)
head(abortion)
# Process data
names(abortion) <- c("District","Respondent","Year","NumPos","Party",
"SocialClass","Gender","Age","Religion")
## Religion
abortion$Religion.Labels[abortion$Religion == 1] <- "Roman Catholic"
abortion$Religion.Labels[abortion$Religion == 2] <- "Protestant/Anglican"
abortion$Religion.Labels[abortion$Religion == 3] <- "Other"
abortion$Religion.Labels[abortion$Religion == 4] <- "None"
abortion$Religion.Labels <- factor(abortion$Religion.Labels)
table(abortion$Religion.Labels, useNA = c("always"))
## Gender
abortion$GenderM <- 0
abortion$GenderM[abortion$Gender == 1] <- 1
table(abortion$GenderM, useNA = c("always"))
## Age
hist(abortion$Age, main="", xlab="Age")
head(abortion)
par(mfrow=c(2,2))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(2,1,1,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(4,1,1,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(1,1,3,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(1,3,1,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(1,4,1,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="Catholic", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="Protestant", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Other"], main="Other", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(1,4,2,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="Catholic", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="Protestant", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Other"], main="Other", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="None"], main="None", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(3,4,3,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="Catholic", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="Protestant", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Other"], main="Other", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="None"], main="None", xlab="Age")
par(mfrow=c(2,2))
par(mar=c(2,4,3,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="Catholic", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="Protestant", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Other"], main="Other", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="None"], main="None", xlab="Age")
hist(coef(abortionlmList)[,2])
?hist
# Set-up coding environment
## Clear global environment
rm(list=ls())
## Import libraries
library(lattice)
library(lme4)
## Set input path
input <- file.path("/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS196A/Project/Input")
# Load data
abortion <- read.table(file=paste0(input,"/socatt.DAT"), header=FALSE)
# Process data
names(abortion) <- c("District","Respondent","Year","NumPos","Party",
"SocialClass","Gender","Age","Religion")
head(abortion)
## Age
hist(abortion$Age, main="", xlab="Age")
## Religion
abortion$Religion.Labels[abortion$Religion == 1] <- "Roman Catholic"
abortion$Religion.Labels[abortion$Religion == 2] <- "Protestant/Anglican"
abortion$Religion.Labels[abortion$Religion == 3] <- "Other"
abortion$Religion.Labels[abortion$Religion == 4] <- "None"
abortion$Religion.Labels <- factor(abortion$Religion.Labels)
table(abortion$Religion.Labels, useNA = c("always"))
## Age by Religion
par(mfrow=c(2,2))
par(mar=c(2,4,3,1))
hist(abortion$Age[abortion$Religion.Labels=="Roman Catholic"], main="Catholic", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Protestant/Anglican"], main="Protestant", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="Other"], main="Other", xlab="Age")
hist(abortion$Age[abortion$Religion.Labels=="None"], main="None", xlab="Age")
par(mfrow=c(1,1))
# Count number of respondents
length(unique(abortion$Respondent))
# Obtain sample
set.seed(1)
ind <- sample(unique(abortion$Respondent), 32, replace=FALSE)
abortion.sample <- abortion[abortion$Respondent %in% ind,]
# Straight-Line Individual Plots (Sample)
xyplot(NumPos ~ Year | Respondent, abortion.sample, type = c("g","p","r"),
index = function(x,y) coef(lm(y ~ x))[1],
xlab = "Years since 1983",
ylab = "Number of Positive Responses", aspect = "xy")
# LM List (Sample)
abortion.sample.lmList <- lmList(NumPos ~ Year | Respondent, data=abortion.sample)
abortion.sample.lmList
abortionlmList <- lmList(NumPos ~ Year | Respondent, data=abortion)
# Intercept
mean(coef(abortionlmList)[,1])
quantile(coef(abortionlmList)[,1])
# Slope
mean(coef(abortionlmList)[,2])
quantile(coef(abortionlmList)[,2])
hist(coef(abortionlmList)[,2], main="", xlab="Coefficient", breaks=10)
hist(coef(abortionlmList)[,2], main="", xlab="Coefficient", breaks=15)
hist(coef(abortionlmList)[,2], main="", xlab="Coefficient", breaks=10)
?rpart.control
library(rpart)
?rpart.control
data <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS315B/Assignment 1/Input"
output <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS315B/Assignment 1/Output"
# Load & Clean Data
housetype <- read.csv(paste0(data,"/Housetype_Data.txt"), header=FALSE)
names(housetype) <- c("type","sex","marital","age","education","occupation","income",
"livedhere","dualincome","hhmembers","hhchildren","hhstatus",
"ethnicity","language")
## Mark relevant variables as factors
housetype$type <- factor(housetype$type, levels=1:5, labels=c("House","Condominium",
"Apartment","Mobile Home",
"Other"))
housetype$sex <- as.factor(housetype$sex)
housetype$marital <- as.factor(housetype$marital)
housetype$age <- as.factor(housetype$age)
housetype$education <- as.factor(housetype$education)
housetype$occupation <- as.factor(housetype$occupation)
housetype$income <- as.factor(housetype$income)
housetype$livedhere <- as.factor(housetype$livedhere)
housetype$dualincome <- as.factor(housetype$dualincome)
housetype$hhstatus <- as.factor(housetype$hhstatus)
housetype$ethnicity <- as.factor(housetype$ethnicity)
housetype$language <- as.factor(housetype$language)
?sample
ind <- sample(nrow(housetype), nrow(housetype)*.2, replace=FALSE)
test <- housetype[ind,]
train <- housetype[-ind,]
housetype.tree <- rpart(type ~ ., data=train, method="class",
control = rpart.control(xval = 10, cp = 0))
printcp(housetype.tree)
mincv <- which.min(printcp(housetype.tree)[,4])
cptouse <- printcp(housetype.tree)[mincv,1]
pruned <- prune(housetype.tree, cp = cptouse)
plot(pruned)
text(pruned)
plot(pruned)
predictions <- predict(pruned, nedata=test, type='class')
pred.table = table(test$type, pred)
pred <- predict(pruned, nedata=test, type='class')
pred.table = table(test$type, pred)
length(pred)
pred <- predict(pruned, newdata=test, type='class')
pred.table = table(test$type, pred)
pred.table
misclass.rate <- (nrow(test)-correct)/nrow(test)
correct <- pred.table[1,1] + pred.table[2,2] + pred.table[3,3] + pred.table[4,4] + pred.table[5,5]
misclass.rate <- (nrow(test)-correct)/nrow(test)
data(simon)
library(npsm)
install.packages(npsm)
install.packages('npsm')
data(simon)
library(npsm)
data(simon)
data(simon)
head(simon)
plot(simon$game1, simon$game2)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
rfit(game2 ~ game1, data=simon)
plot(simon.rfit)
simon.rfit <- rfit(game2 ~ game1, data=simon)
plot(simon.rfit)
?line
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
line(c(0,1), c(0,1))
lines(c(0,1), c(0,1), add=TRUE)
?lines
?abline
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2")
abline(a = 0, b = 1)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
abline(a = 0, b = 1)
simon.rfit
data(simon)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
simon.rfit <- rfit(game2 ~ game1, data=simon)
absline(simon.rfit)
abline(simon.rfit)
abline(a = 0, b = 1)
plot(simon$game1, simon$game2, xlab="Game 1", ylab="Game 2", xlim=c(0,20), ylim=c(0,20))
simon.rfit <- rfit(game2 ~ game1, data=simon)
abline(simon.rfit)
abline(a = 0, b = 1, lty=2)
summary(rfit)
summary(simon.rfit)
se <- simon.rfit[2,2]
se <- summary(simon.rfit)[2,2]
se <- simon.rfit$coefficients[2,2]
coefficients(simon.rfit)[2,2]
coefficients(simon.rfit)
summary(fit)$sigma
summary(simon.rfit)$sigma
m <- summary(simon.rfit)
m$sigma
m$dropstat
m$coefficients
m$coefficients[2,2]
se <- summary(simon.rfit)$coefficients[2,2]
game1.coef <- summary(simon.rfit)$coefficients[2,1]
game1.se <- summary(simon.rfit)$coefficients[2,2]
lb <- game1.coef - 1.97*se
ub <- game1.coef + 1.97*se
# C) Obtain an R estimate of the slope of the regression line as well as an associated confidence interval.
summary(simon.rfit)
game1.coef <- summary(simon.rfit)$coefficients[2,1]
game1.se <- summary(simon.rfit)$coefficients[2,2]
lb <- game1.coef - 1.97*se
ub <- game1.coef + 1.97*se
c(lb,ub)
X <- rlaplace(30)
errors <- rnorm(30)
install.packages('VGAM')
library(VGAM)
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
plot(X, Y)
df <- cbind(X, Y)
View(df)
# Import libraries
library(npsm)
library(VGAM)
set.seed(205)
# Generate data
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
# Scatterplot
plot(X, Y)
# Association analyses
df <- cbind(X, Y)
with(df, cor.test(X,Y))
with(df, cor.test(X,Y, method='spearman'))
?cor.test
cor.test(X,Y)
rm(list=ls())
# Import libraries
library(npsm)
library(VGAM)
# Set Seed
set.seed(205)
# Generate data
X <- rlaplace(30)
errors <- rnorm(30)
Y <- X + errors
plot(X, Y)
cor.test(X,Y)
cor.test(X,Y, method='spearman')
cor.test(X,Y, method='kendall')
cor.test(X,Y, method='pearson')
?cor.boot.ci
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
cor.test(X,Y, method='pearson')
m <- cor.test(X,Y, method='pearson')
m$p.value
m$statistic
m$estimate
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xseq<-seq(-4,4,.01)
cumulative<-pnorm(xseq, 0, 1)
plot(xseq, cumulative)
line(xseq, cumulative, lwd=1, col="red")
lines(xseq, cumulative, lwd=1, col="red")
xseq<-seq(-4,4,.01)
cumulative<-pnorm(xseq, 0, 1)
lines(xseq, cumulative, lwd=1, col="red")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE)
input <- "/Users/jmoore523/Dropbox/Graduate School/Q3 - Spring 2016/STATS205/Assignment 5/Input"
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE)
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, sep=",")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="", fileEncoding="UCS-2LE")
oes <- read.csv(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), header=TRUE, quote="")
library(xlsx)
?read.xlsx
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"))
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
install.packages('openxlsx')
library(openxlsx)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
View(oes)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$state, oes.red$occ_title, oes.red$h_median)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$state, oes.red$occ_title, oes.red$h_median)
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN)
oes.table <- table(oes$state, oes$job_title)
data(hodgkins)
library(npsm)
data(hodgkins)
head(hodgkins)
table(hodgkins$trt)
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
install.packages('survival')
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
library(survival)
fit <- with(hodgkins, survfit(Surv(time,relapse)~trt))
plot(fit, lty=1:2, ylab="", xlab="Time")
legend('bottomleft', c("Affected Node", "Total Node"), lty=1:2, bty='n')
plot(fit, lty=1:2, main="Hodgkins Treatment Survival", ylab="Probability of Relapse-Free Survival", xlab="Time")
legend('bottomleft', c("Affected Node", "Total Node"), lty=1:2, bty='n')
?Exponential
with(hodgkins, Surv(time, recur))
with(hodgkins, Surv(time, relapse))
df2 <- as.data.frame(cbind(event.times, study.times))
df2$time <- min(event.times, study.times)
event.mean <- 5
event.times <- rexp(100, rate = 1/event.mean)
## Study
study.mean <- 1.8
study.times <- rexp(100, rate = 1/study.mean)
# Create DF
df2 <- as.data.frame(cbind(event.times, study.times))
df2$time <- min(event.times, study.times)
View(df2)
df2$time <- apply(df[,1:2],1,min)
df2$time <- apply(df2[,1:2],1,min)
View(df2)
df2$censor <- df$study.times < df$event.times
df2$censor <- df2$study.times < df2$event.times
View(df2)
?ifelse
df2$censor <- ifelse(df2$study.times < df2$event.times, 1, 0)
View(df2)
fit <- with(df2, survfit(Surv(time,censor)))
fit <- with(df2, survfit(Surv(time,censor)~1))
plot(df2.fit)
df2.fit <- with(df2, survfit(Surv(time,censor)~1))
plot(df2.fit)
?survfit
plot(df2.fit, conf.int=FALSE)
plot(df2.fit, conf.int=FALSE, xlab="Time", ylab="Probability of Event-Free Survival")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
oes.red <- subset(oes, OCC_GROUP =="detailed")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
View(oes)
oes <- read.xlsx(paste0(input,"/oesm15st/state_M2015_dl.xlsx"), 1)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN), stringsAsFactors = FALSE)
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN_NUM <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN <- as.charcter(oes.red$H_MEDIAN)
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
View(oes.red)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
View(oes.red)
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
oes.red <- subset(oes, OCC_GROUP =="detailed" & H_MEDIAN != "*")
oes.red <- as.data.frame(cbind(oes.red$STATE, oes.red$OCC_TITLE, oes.red$H_MEDIAN))
names(oes.red) <- c("STATE","OCC_TITLE","H_MEDIAN")
oes.red$H_MEDIAN <- as.character(oes.red$H_MEDIAN)
oes.red$H_MEDIAN[oes.red$H_MEDIAN == "#"] <- "90"
oes.red$H_MEDIAN <- as.numeric(oes.red$H_MEDIAN)
View(oes.red)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
unique(oes.red$OCC_TITLE,oes.red$STATE)
length(unique(oes.red$OCC_TITLE,oes.red$STATE))
unique(oes.red[,c('OCC_TITLE','STATE')])
length(unique(oes.red[,c('OCC_TITLE','STATE')]))
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
oes.red$STATE <- as.factor(oes.red$STATE)
oes.red$OCC_TITLE <- as.factor(oes.red$OCC_TITLE)
friedman.test(H_MEDIAN ~ OCC_TITLE | STATE, data=oes.red)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?write.xlsx
write.xlsx(cis.all.combined, file=paste0(output,"/AUC CIs.xlsx"), sheetName="CIs-All", col.names=TRUE, row.names=TRUE, append=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?p.adjust
bs.all.lscv <- c(0,1,2,3,4)
bs.all.lscv.bcv1 <- c(5,6,7,8)
wilcox.test(bs.all.lscv,bs.all.lscv.bcv1)$p.value
wilcox.test(bs.all.lscv,bs.all.lscv.bcv1)
p.adjust(rep(.01,10), method='holm')
p.adjust(rep(.01,15), method='holm')
?sink
?unlink
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
